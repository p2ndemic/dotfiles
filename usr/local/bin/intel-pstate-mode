#!/usr/bin/env bash

#  Check for root privileges
if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root. Please use sudo."
    exit 1
fi

# Function to show usage information
show_usage() {
    echo "Usage: $0 [--pp|--performance-powersave | --pm|--performance-max | --help] <command> [args...]"
    echo "  --pp, --performance-powersave  Balanced performance profile"
    echo "  --pm, --performance-max        Maximum performance profile"
}

# Check for minimum required arguments
if [[ $# -lt 2 ]]; then
    show_usage
    exit 1
fi

MODE="$1"

# --- Select and apply the performance profile ---
case "$MODE" in
    --pp|--performance-powersave)
        echo "INFO: Activating 'performance-powersave' profile..."
        systemctl start intel-pstate-performance-powersave.service
        shift # Remove mode argument
        ;;
    --pm|--performance-max)
        echo "INFO: Activating 'max-performance' profile..."
        systemctl start intel-pstate-performance-max.service
        shift # Remove mode argument
        ;;
    --help)
        show_usage
        exit 0
        ;;
    *)
        echo "Error: Invalid mode '$MODE'. Use --help to see available options." >&2
        exit 1
        ;;
esac


# Run the application
echo "INFO: Starting application: $@"
exec "$@"

# Restore default profile after application exits
echo "Restoring default profile"
systemctl start intel-pstate-default.service
